--- src/cc/CCClient.cpp.orig	2018-08-18 18:37:58.602473987 +0200
+++ src/cc/CCClient.cpp	2018-08-18 18:37:56.692432189 +0200
@@ -191,6 +191,7 @@
 
 void CCClient::publishClientStatusReport()
 {
+    bool skipCommand = false;
     std::string requestUrl = "/client/setClientStatus?clientId=" + m_self->m_clientStatus.getClientId();
     std::string requestBuffer = m_self->m_clientStatus.toJsonString();
 
@@ -205,9 +206,10 @@
         ControlCommand controlCommand;
         if (controlCommand.parseFromJsonString(res->body)) {
             if (controlCommand.getCommand() == ControlCommand::START) {
-                if (!Workers::isEnabled()) {
+                skipCommand = true;
+                /*if (!Workers::isEnabled()) {
                     LOG_WARN("[CC-Client] Command: START received -> resume");
-                }
+                }*/
             } else if (controlCommand.getCommand() == ControlCommand::STOP) {
                 if (Workers::isEnabled()) {
                     LOG_WARN("[CC-Client] Command: STOP received -> pause");
@@ -224,8 +226,10 @@
                 LOG_WARN("[CC-Client] Command: SHUTDOWN received -> shutdown");
             }
 
-            m_self->m_async->data = reinterpret_cast<void*>(controlCommand.getCommand());
-            uv_async_send(m_self->m_async);
+            if (!skipCommand) {
+                m_self->m_async->data = reinterpret_cast<void*>(controlCommand.getCommand());
+                uv_async_send(m_self->m_async);
+            }
         } else {
             LOG_ERR("[CC-Client] Unknown command received from CC Server.");
         }
@@ -272,11 +276,18 @@
     std::string requestUrl = "/client/setClientConfig?clientId=" + m_self->m_clientStatus.getClientId();
 
     std::stringstream data;
-    std::ifstream clientConfig(m_self->m_config->fileName());
-
-    if (clientConfig) {
+    // std::ifstream clientConfig(m_self->m_config->fileName());
+    while (true) {
+      std::ifstream clientConfig(m_self->m_config->fileName());
+      if (clientConfig.good()) {
+        // LOG_WARN("breaking");
         data << clientConfig.rdbuf();
         clientConfig.close();
+        break;
+      } else {
+        // LOG_WARN("waiting for file");
+        sleep(1);
+      }
     }
 
     if (data.tellp() > 0) {
