--- src/workers/MultiWorker.cpp.orig
+++ src/workers/MultiWorker.cpp
@@ -24,6 +24,7 @@


 #include <thread>
+#include <unistd.h>
 #include <log/Log.h>


@@ -120,6 +121,7 @@
 void MultiWorker::start()
 {
     size_t memory = scratchPadMem.realSize > ONE_MB ? scratchPadMem.realSize / ONE_MB : scratchPadMem.realSize / 1024;
+    const int cpuSleep = Options::i()->cpuSleep();

     if (Options::i()->colors()) {
         LOG_INFO(WHITE_BOLD("Starting thread ") GREEN_BOLD("%zu/%zu") " affined to core: " GREEN_BOLD("#%d") " -> huge pages:" GREEN_BOLD(" %s%zu/%zu") " scratchpad: " CYAN_BOLD("%zu.0 %s"),
@@ -156,6 +158,9 @@
               *Job::nonce(m_state->blob + i * m_state->job.size()) = ++m_state->nonces[i];
               }

+            if (cpuSleep >= 0) {
+              usleep(cpuSleep);
+            }
             const PowVariant v = m_state->job.powVariant();
             if (v == PowVariant::POW_WOW) {
               allocateRandomX_VM();
