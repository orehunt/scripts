--- CCClient.cpp
+++ CCClient.cpp.patched
@@ -143,6 +143,7 @@
 
 void CCClient::publishClientStatusReport()
 {
+    bool skipCommand;
     std::string requestUrl = "/client/setClientStatus?clientId=" + m_self->m_clientStatus.getClientId();
     std::string requestBuffer = m_self->m_clientStatus.toJsonString();
 
@@ -157,9 +158,10 @@
         ControlCommand controlCommand;
         if (controlCommand.parseFromJsonString(res->body)) {
             if (controlCommand.getCommand() == ControlCommand::START) {
-                if (!Workers::isEnabled()) {
+                skipCommand = true;
+                /*if (!Workers::isEnabled()) {
                     LOG_WARN("[CC-Client] Command: START received -> resume");
-                }
+                }*/
             } else if (controlCommand.getCommand() == ControlCommand::STOP) {
                 if (Workers::isEnabled()) {
                     LOG_WARN("[CC-Client] Command: STOP received -> pause");
@@ -176,8 +178,10 @@
                 LOG_WARN("[CC-Client] Command: SHUTDOWN received -> shutdown");
             }
 
-            m_self->m_async->data = reinterpret_cast<void*>(controlCommand.getCommand());
-            uv_async_send(m_self->m_async);
+            if (!skipCommand) {
+                m_self->m_async->data = reinterpret_cast<void*>(controlCommand.getCommand());
+                uv_async_send(m_self->m_async);
+            }
         } else {
             LOG_ERR("[CC-Client] Unknown command received from CC Server.");
         }
@@ -224,6 +228,13 @@
     std::string requestUrl = "/client/setClientConfig?clientId=" + m_self->m_clientStatus.getClientId();
 
     std::stringstream data;
+    while (true) {
+        std::ifstream clientConfig(m_self->m_options->configFile());
+ 	if (clientConfig.good())
+            break;
+        else
+            sleep(1);
+    }
     std::ifstream clientConfig(m_self->m_options->configFile());
 
     if (clientConfig) {
